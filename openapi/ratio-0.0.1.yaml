openapi: 3.0.0
info:
  title: Ratio API
  description: API endpoints and models for using the Ratio service
  contact:
    name: API Support
    url: https://help.ratio.me
    email: support@ratio.me
  termsOfService: http://developer.ratio.me/terms/
  version: 0.0.1
servers:
  - url: http://localhost:3001
    description: Local server
security:
  - JWT: []
components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Wallets:
      description: ''
      required:
        - items
      type: object
      properties:
        items:
          description: The wallets of the user
          type: array
          items:
            $ref: '#/components/schemas/Wallet'
        totalSize:
          description: The number of wallets
          type: number
    Allocations:
      description: ''
      required:
        - items
      type: object
      properties:
        items:
          description: The allocations of the user
          type: array
          items:
            $ref: '#/components/schemas/Allocation'
        totalSize:
          description: The number of allocations
          type: number
    Activities:
      description: ''
      required:
        - items
      type: object
      properties:
        items:
          description: The activities of the user
          type: array
          items:
            $ref: '#/components/schemas/Activity'
        totalSize:
          description: The number of activities
          type: number
    ActivateBankLinkResponse:
      description: ''
      required:
        - bankAccount
      type: object
      properties:
        bankAccount:
          description: The bank account of the user
          $ref: '#/components/schemas/BankAccount'
        balance:
          description: The balance of the bank account
          type: string
    Activity:
      description: ''
      required:
        - id
        - createTime
        - updateTime
        - address
        - network
      type: object
      properties:
        id:
          description: The unique identifier of the allocation
          type: string
        createTime:
          description: The time the allocation was created
          type: string
        updateTime:
          description: The time the allocation was last updated
          type: string
        address:
          description: The address of the allocation
          type: string
        name:
          description: The nickname of the allocation
          type: string
        network:
          description: The crypto network of the allocation
          type: string
        type:
          description: The type of the activity
          type: string
          enum:
            - BUY_CRYPTO
        status:
          description: The status of the activity
          type: string
          enum:
            - PENDING
            - COMPLETED
        wallet:
          description: The wallet of the activity
          $ref: '#/components/schemas/Wallet'
        baseCurrency:
          description: The base currency of the activity
          type: string
        quoteCurrency:
          description: The quoted currency of the activity
          type: string
        amount:
          description: The amount of quote currency acquired
          type: string
        price:
          description: The unit price in base currency
          type: string
        cost:
          description: The total cost in the base currency
          type: string
        fee:
          description: The fee in the base currency
          type: string
        accountId:
          description: The account identifier of the activity
          type: string
        transferId:
          description: The transfer identifier of the activity
          type: string
        orderId:
          description: The order identifier of the activity
          type: string
        withdrawalId:
          description: The withdrawal identifier of the activity
          type: string
        transactionHash:
          description: The chain transaction hash of the activity
          type: string
    Allocation:
      description: ''
      required:
        - id
        - createTime
        - updateTime
        - network
        - currency
        - value
        - type
      type: object
      properties:
        id:
          description: The unique identifier of the allocation
          type: string
        createTime:
          description: The time the allocation was created
          type: string
        updateTime:
          description: The time the allocation was last updated
          type: string
        network:
          description: The crypto network of the allocation
          type: string
        currency:
          description: The crypto currency of the allocation
          type: string
        value:
          description: The fiat value of the allocation
          type: string
        type:
          description: The type of the allocation
          type: string
          enum:
            - PERCENTAGE
            - DOLLAR
        wallet:
          description: The wallet of the allocation
          $ref: '#/components/schemas/Wallet'
    AuthenticationResponse:
      description: ''
      required:
        - sessionJwt
      type: object
      properties:
        sessionJwt:
          description: The authenticated Bearer token
          type: string
        user:
          description: The user object
          $ref: '#/components/schemas/User'
        email:
          description: The email of the user
          type: string
    AuthenticateCryptoWalletStartResponse:
      description: ''
      required:
        - challenge
      type: object
      properties:
        challenge:
          description: The challenge string to be signed by the requested wallet
          type: string
    BankAccount:
      description: ''
      required:
        - name
        - mask
      type: object
      properties:
        name:
          description: The name of the bank account
          type: string
        mask:
          description: The account number mask
          type: string
    BankBalance:
      description: ''
      required:
        - balance
      type: object
      properties:
        balance:
          description: The balance of the bank account
          type: string
    CreateTotpResponse:
      description: ''
      required:
        - secret
        - qrCode
        - recoveryCodes
        - totpId
      type: object
      properties:
        secret:
          description: The secret to be used by the users authenticator app
          type: string
        qrCode:
          description: The QR code that can be scanned by the users authenticator app
          type: string
        recoveryCodes:
          description: The recovery codes to be used if the users authenticator app is lost
          type: string
        totpId:
          description: The TOTP unique identifier
          type: string
    Error:
      description: ''
      type: object
      properties:
        message:
          description: Error message
          type: string
        createTime:
          description: Error creation time
          type: string
        code:
          description: Error code
          type: string
        data:
          description: Error data
          type: object
    IdvStatus:
      description: ''
      required:
        - status
        - url
      type: object
      properties:
        status:
          description: The status of the user's identity verification
          type: string
        url:
          description: The URL to provide the user to complete identity verification
          type: string
    PlaidLinkToken:
      description: ''
      required:
        - linkToken
      type: object
      properties:
        linkToken:
          description: The link token for the Plaid integration
          type: string
    NetworkFee:
      description: ''
      type: object
      properties:
        baseCurrency:
          description: Base currency
          type: string
        baseFee:
          description: Fee amount in base currency
          type: string
        quoteCurrency:
          description: Quote currency
          type: string
        quoteFee:
          description: Fee amount in quote currency
          type: string
    Price:
      description: ''
      type: object
      properties:
        baseCurrency:
          description: Base currency
          type: string
        quoteCurrency:
          description: Quote currency
          type: string
        price:
          description: Price
          type: string
    PriceResponse:
      description: ''
      required:
        - prices
        - networkFees
      type: object
      properties:
        prices:
          description: The quoted prices
          type: array
          items:
            $ref: '#/components/schemas/Price'
        networkFees:
          description: The current network fees
          type: array
          items:
            $ref: '#/components/schemas/NetworkFee'
    AuthenticateCryptoWalletStartRequest:
      description: ''
      required:
        - cryptoWalletAddress
        - cryptoWalletType
      type: object
      properties:
        cryptoWalletAddress:
          description: The wallet address to authenticate
          type: string
        cryptoWalletType:
          description: The wallet network to authenticate
          type: string
          enum:
            - ethereum
            - solana
    AuthenticateCryptoWalletRequest:
      description: ''
      required:
        - cryptoWalletAddress
        - cryptoWalletType
        - signature
      type: object
      properties:
        cryptoWalletAddress:
          description: The wallet address to authenticate
          type: string
        cryptoWalletType:
          description: The wallet network to authenticate
          type: string
          enum:
            - ETH
            - SOL
        signature:
          description: The signature of the challenge
          type: string
    AuthenticateOtpRequest:
      description: ''
      required:
        - otp
        - phoneId
      type: object
      properties:
        otp:
          description: The OTP to authenticate
          type: string
        phoneId:
          description: The phone identifier to authenticate
          type: string
    AuthenticateTokenRequest:
      description: ''
      required:
        - token
      type: object
      properties:
        token:
          description: The token to authenticate
          type: string
    AuthenticateTotpRequest:
      description: ''
      required:
        - totp
        - totpId
      type: object
      properties:
        totp:
          description: The TOTP to authenticate
          type: string
        totpId:
          description: The TOTP identifier to authenticate
          type: string
    CreateAllocationRequest:
      description: ''
      required:
        - currency
        - network
      type: object
      properties:
        currency:
          description: The currency of the allocation
          type: string
        network:
          description: The crypto network of the allocation
          type: string
        walletAddress:
          description: The wallet address of the allocation
          type: string
        walletName:
          description: The wallet name of the allocation
          type: string
        walletId:
          description: The existing wallet ID of the allocation
          type: string
    CreateBankAllocationRequest:
      description: ''
      required:
        - currency
        - network
        - amount
      type: object
      properties:
        currency:
          description: The currency of the allocation
          type: string
        network:
          description: The crypto network of the allocation
          type: string
        amount:
          description: The fiat amount of the allocation
          type: string
        walletAddress:
          description: The wallet address of the allocation
          type: string
        walletName:
          description: The wallet name of the allocation
          type: string
        walletId:
          description: The existing wallet ID of the allocation
          type: string
    CreateWalletRequest:
      description: ''
      required:
        - address
      type: object
      properties:
        address:
          description: The address of the wallet
          type: string
        name:
          description: The name of the wallet
          type: string
        network:
          description: The network of the wallet
          type: string
          enum:
            - ETH
            - BTC
            - SOL
            - POLYGON
    PayrollTokenRequest:
      description: ''
      type: object
      properties:
        totalAllocation:
          description: The total payroll allocation amount
          type: string
        payrollProvider:
          description: The payroll provider of the user
          type: string
          enum:
            - OTHER
            - ADP
            - WORKDAY
            - PAYCHEX
            - GUSTO
    PlaidActivateLinkRequest:
      description: ''
      required:
        - publicToken
      type: object
      properties:
        publicToken:
          description: The public token from the Plaid integration
          type: string
    SendSmsOtpRequest:
      description: ''
      required:
        - phoneNumber
      type: object
      properties:
        phoneNumber:
          description: The phone number to send the SMS OTP to
          type: string
    UpdateAllocationRequest:
      description: ''
      type: object
      properties:
        currency:
          description: The currency of the allocation
          type: string
        network:
          description: The crypto network of the allocation
          type: string
        walletAddress:
          description: The wallet address of the allocation
          type: string
        walletName:
          description: The wallet name of the allocation
          type: string
        walletId:
          description: The existing wallet ID of the allocation
          type: string
    UpdateWalletRequest:
      description: ''
      required:
        - name
      type: object
      properties:
        name:
          description: The name of the wallet
          type: string
    SendSmsOtpResponse:
      description: ''
      required:
        - phoneId
      type: object
      properties:
        phoneId:
          description: The ID of the phone number
          type: string
    User:
      description: ''
      required:
        - id
        - status
        - email
        - firstName
        - lastName
        - country
        - phone
        - nationality
        - occupation
        - currency
        - preferredMfaMethod
      type: object
      properties:
        id:
          description: The unique identifier of the user
          type: string
        createTime:
          description: The time the user was created
          type: string
        updateTime:
          description: The time the user was last updated
          type: string
        status:
          description: The status of the user
          type: string
          enum:
            - ONBOARDING
            - KYC_SUBMITTED
            - KYC_DECLINED
            - FLAGGED
            - ACTIVE
        email:
          description: The email of the user
          type: string
        firstName:
          description: The first name of the user
          type: string
        middleName:
          description: The middle name of the user
          type: string
        lastName:
          description: The last name of the user
          type: string
        country:
          description: The country of the user
          type: string
        phone:
          description: The phone number of the user
          type: string
        payrollProvider:
          description: The payroll provider of the user
          type: string
          enum:
            - OTHER
            - ADP
            - WORKDAY
            - PAYCHEX
            - GUSTO
            - MANUAL
        nationality:
          description: The nationality of the user
          type: string
        occupation:
          description: The occupation of the user
          type: string
        currency:
          description: The fiat currency of the user
          type: string
        totalAllocation:
          description: The total payroll allocation of the user
          type: string
        preferredMfaMethod:
          description: The preferred MFA method of the user
          type: string
          enum:
            - OTP_SMS
            - TOTP
        accountNumber:
          description: The Ratio bank account number of the user
          type: string
        routingNumber:
          description: The Ratio bank routing number of the user
          type: string
        bankAccount:
          description: The bank account of the user
          $ref: '#/components/schemas/BankAccount'
    Wallet:
      description: ''
      required:
        - id
        - createTime
        - updateTime
        - address
        - network
      type: object
      properties:
        id:
          description: The unique identifier of the wallet
          type: string
        createTime:
          description: The time the wallet was created
          type: string
        updateTime:
          description: The time the wallet was last updated
          type: string
        address:
          description: The address of the wallet
          type: string
        name:
          description: The nickname of the wallet
          type: string
        network:
          description: The crypto network of the wallet
          type: string
paths:
  /auth/magicLink:
    post:
      deprecated: false
      summary: Authenticate a user's magic link token
      security: []
      responses:
        '200':
          description: Authentication response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        '400':
          description: Missing Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '502':
          description: Stytch Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters: []
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateTokenRequest'
        description: Magic link token request object
        required: true
  /auth/oauth:
    post:
      deprecated: false
      summary: Authenticate a user's OAuth token
      security: []
      responses:
        '200':
          description: Authentication response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        '400':
          description: Missing Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '502':
          description: Stytch Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters: []
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateTokenRequest'
        description: OAuth token request object
        required: true
  /auth/cryptoWallet/start:
    post:
      deprecated: false
      summary: Start a crypto wallet authentication flow
      security: []
      responses:
        '200':
          description: Start Crypto wallet auth response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticateCryptoWalletStartResponse'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters: []
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateCryptoWalletStartRequest'
        description: Start Crypto wallet auth request object
        required: true
  /auth/cryptoWallet/:
    post:
      deprecated: false
      summary: Authenticate a user's crypto wallet
      security: []
      responses:
        '200':
          description: Authentication response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters: []
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateCryptoWalletRequest'
        description: Crypto wallet auth request object
        required: true
  /auth/otp/sms:
    post:
      deprecated: false
      summary: Send an SMS OTP to the user
      security:
        - JWT: []
      responses:
        '200':
          description: Send SMS OTP response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendSmsOtpResponse'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters: []
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendSmsOtpRequest'
        description: Send SMS OTP request object
        required: true
  /auth/otp/authenticate:
    post:
      deprecated: false
      summary: Authenticate a user with an SMS OTP
      security:
        - JWT: []
      responses:
        '200':
          description: Authentication response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid OTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters: []
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateOtpRequest'
        description: Authenticate SMS OTP request object
        required: true
  /auth/totp:
    post:
      deprecated: false
      summary: Create TOTP authentication for a user
      security:
        - JWT: []
      responses:
        '200':
          description: Create TOTP response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTotpResponse'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters: []
      tags:
        - Auth
  /auth/totp/authenticate:
    post:
      deprecated: false
      summary: Authenticate a user with TOTP
      security:
        - JWT: []
      responses:
        '200':
          description: Authentication response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid TOTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters: []
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateTotpRequest'
        description: Authenticate TOTP request object
        required: true
  /crypto/prices:
    get:
      deprecated: false
      summary: Get crypto prices
      security:
        - JWT: []
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - name: baseCurrencies
          in: query
          description: The currencies to get prices for (comma separated)
          required: false
          deprecated: false
          schema:
            type: string
        - name: quoteCurrency
          in: query
          description: The currency to quote the prices in
          required: false
          deprecated: false
          schema:
            type: string
        - name: includeNetworkFees
          in: query
          description: Whether to include network fees in the response
          required: false
          deprecated: false
          schema:
            type: string
            enum:
              - 'true'
              - 'false'
      tags:
        - Crypto
  /users/{userId}:
    get:
      deprecated: false
      summary: This returns the current authenticated user
      security:
        - JWT: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: userId
          in: path
          description: The id of the user
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - User
  /users:
    post:
      deprecated: false
      summary: This creates a new user
      security:
        - JWT: []
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters: []
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User to be created
        required: true
  /users/{userId}/kyc:
    post:
      deprecated: false
      summary: This initiates the KYC process for a user
      security:
        - JWT: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - User
  /users/{userId}/idv:
    post:
      deprecated: false
      summary: This initiates the IDV process for user
      security:
        - JWT: []
      responses:
        '200':
          description: Status of the IDV request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdvStatus'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
        '422':
          description: User has not yet submitted KYC
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - User
  /users/{userId}/wallets:
    get:
      deprecated: false
      summary: This returns the wallets for a user
      security:
        - JWT: []
      responses:
        '200':
          description: Wallets for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallets'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
        '422':
          description: User is not ACTIVE
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Wallet
    post:
      deprecated: false
      summary: This connects a wallet to a user
      security:
        - JWT: []
      responses:
        '200':
          description: Wallet for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
        '409':
          description: Wallet already connected or not valid for selected network
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: User is not ACTIVE
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Wallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletRequest'
        description: Wallet to be connected
        required: true
  /users/{userId}/wallets/{walletId}:
    get:
      deprecated: false
      summary: This returns the specified wallet for a user
      security:
        - JWT: []
      responses:
        '200':
          description: Wallet for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Wallet/User not found
          content:
            application/json:
              schema:
                type: object
        '422':
          description: User is not ACTIVE
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
        - name: walletId
          in: path
          description: Wallet ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Wallet
    post:
      deprecated: false
      summary: This updates a wallet for a user
      security:
        - JWT: []
      responses:
        '200':
          description: Wallet for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User or wallet not found
          content:
            application/json:
              schema:
                type: object
        '422':
          description: User is not ACTIVE
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
        - name: walletId
          in: path
          description: Wallet ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Wallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWalletRequest'
        description: Wallet to be updated
        required: true
    delete:
      deprecated: false
      summary: This deletes a wallet for a user
      security:
        - JWT: []
      responses:
        '204':
          description: Wallet deleted
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User or wallet not found
          content:
            application/json:
              schema:
                type: object
        '422':
          description: User is not ACTIVE
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
        - name: walletId
          in: path
          description: Wallet ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Wallet
  /users/{userId}/payroll/allocations:
    get:
      deprecated: false
      summary: This gets all payroll allocations for a user
      security:
        - JWT: []
      responses:
        '200':
          description: Payroll allocations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Allocations'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Payroll
    post:
      deprecated: false
      summary: This creates a payroll allocation for a user
      security:
        - JWT: []
      responses:
        '200':
          description: Payroll allocation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Allocation'
        '400':
          description: Invalid allocation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
        '409':
          description: Allocation already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Payroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAllocationRequest'
        description: Payroll allocation to be created
        required: true
  /users/{userId}/payroll/allocations/{allocationId}:
    post:
      deprecated: false
      summary: This updates a payroll allocation for a user
      security:
        - JWT: []
      responses:
        '200':
          description: Payroll allocation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Allocation'
        '400':
          description: Invalid allocation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User or Allocation not found
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
        - name: allocationId
          in: path
          description: Allocation ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Payroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAllocationRequest'
        description: Allocation to be updated
        required: true
    get:
      deprecated: false
      summary: This gets a payroll allocation for a user
      security:
        - JWT: []
      responses:
        '200':
          description: Payroll allocation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Allocation'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User or Allocation not found
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
        - name: allocationId
          in: path
          description: Allocation ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Payroll
  /users/{userId}/activity:
    get:
      deprecated: false
      summary: This gets a user's transaction activity
      security:
        - JWT: []
      responses:
        '200':
          description: User activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activities'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Activity
  /users/{userId}/bank/balance:
    get:
      deprecated: false
      summary: This gets a user's connected bank balance
      security:
        - JWT: []
      responses:
        '200':
          description: User bank balance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankBalance'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Bank
  /users/{userId}/bank/allocations:
    post:
      deprecated: false
      summary: This creates a bank allocation for a user
      security:
        - JWT: []
      responses:
        '200':
          description: Bank allocation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Allocation'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Bank
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBankAllocationRequest'
        description: Bank allocation to be created
        required: true
  /users/{userId}/payroll:requestToken:
    post:
      deprecated: false
      summary: Requests a payroll link token for a user
      security:
        - JWT: []
      responses:
        '200':
          description: User payroll token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayrollTokenRequest'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Payroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayrollTokenRequest'
        description: Request payroll token request object
        required: true
  /users/{userId}/payroll:setManual:
    post:
      deprecated: false
      summary: Sets a user's payroll to manual
      security:
        - JWT: []
      responses:
        '200':
          description: User payroll set to manual
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Payroll
  /users/{userId}/bank:requestLink:
    post:
      deprecated: false
      summary: Requests a Plaid bank link token for a user
      security:
        - JWT: []
      responses:
        '200':
          description: Plaid bank link token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaidLinkToken'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Bank
  /users/{userId}/bank:activateLink:
    post:
      deprecated: false
      summary: Activates a Plaid bank link for a user
      security:
        - JWT: []
      responses:
        '200':
          description: Plaid bank link activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateBankLinkResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Bank
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaidActivateLinkRequest'
        description: Plaid public token
        required: true
  /users/{userId}/bank:deleteLink:
    post:
      deprecated: false
      summary: Deletes a Plaid bank link for a user
      security:
        - JWT: []
      responses:
        '204':
          description: Plaid bank link deleted
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          deprecated: false
          schema:
            type: string
      tags:
        - Bank
tags:
  - name: Activity
    description: ''
  - name: Auth
    description: ''
  - name: Bank
    description: ''
  - name: Crypto
    description: ''
  - name: Payroll
    description: ''
  - name: User
    description: ''
  - name: Wallet
    description: ''
